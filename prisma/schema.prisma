// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "mysql"
  url  	    = env("DATABASE_URL")
}

model User {
  id            String  @id @default(cuid())
  name          String
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String?   @default("USER")  // o  ADMIN
  accounts      Account[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// model Jugador {
//   id               Int      @id @default(autoincrement())
//   nombre           String   @db.VarChar(255)
//   localidad        String   @db.VarChar(255)
//   fechaNacimiento  DateTime?
//   entrenadores     Entrenador[]
// }

// model Entrenador {
//   id           Int      @id @default(autoincrement())
//   nombre       String   @db.VarChar(255)
//   especialidad String   @db.VarChar(255)
//   jugadores    Jugador[]
// }

model Jugador {
  id                  Int       @id @default(autoincrement())
  nombre              String
  apellidos           String
  fechaNacimiento     DateTime
  categoria           Categoria @relation(fields: [categoriaId], references: [id])
  lateralidad         String
  posicionPrincipal   String
  posicionSecundaria  String
  sexo                String
  dni                 String    @unique
  foto                String
  localidad           String
  telefono            String
  telefonoPadre       String
  telefonoMadre       String
  tallaCamiseta       String
  tallaChandal        String
  tallaSudadera       String
  numeroPie           Int
  mail1               String
  mail2               String
  notas               String?
  nombrePadre         String
  nombreMadre         String
  goles               Int
  fechaReconocimientoMedico DateTime

  categoriaId         Int
  entrenador           Entrenador @relation(fields: [entrenadorId], references: [id])
  entrenadorId        Int

  registrosAsistencias RegistroAsistencia[]
}

model Entrenador {
  id                  Int       @id @default(autoincrement())
  nombre              String
  apellidos           String
  fechaNacimiento     DateTime
  categoria           Categoria @relation(fields: [categoriaId], references: [id])
  dni                 String    @unique
  foto                String
  localidad           String
  telefono            String
  tallaCamiseta       String
  tallaChandal        String
  tallaSudadera       String
  mail1               String
  mail2               String
  notas               String?
  controlAsistencia   String
  calendario          String
  titulacion          String

  categoriaId         Int
  jugadores            Jugador[]
  registrosAsistencias RegistroAsistencia[]
}

model Categoria {
  id                  Int       @id @default(autoincrement())
  nombre              String
  entrenadores         Entrenador[]
  jugadores            Jugador[]
}

model RegistroAsistencia {
  id                  Int       @id @default(autoincrement())
  fechaEntrenamiento  DateTime
  nota                String?

  entrenadorId         Int
  jugadorId            Int

  entrenador           Entrenador @relation(fields: [entrenadorId], references: [id])
  jugador              Jugador    @relation(fields: [jugadorId], references: [id])

}