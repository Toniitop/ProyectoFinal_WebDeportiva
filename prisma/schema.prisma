// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "mysql"
  url  	    = env("DATABASE_URL")
}

model User {
  id            String  @id @default(cuid())
  name          String
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String?   @default("USER")  // o  ADMIN
  accounts      Account[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Definición del modelo Jugadores
model Jugadores {
  id                          Int                   @id @default(autoincrement())
  nombre                      String
  apellidos                   String
  fecha_nacimiento            DateTime?
  categoriaId                 Int
  lateralidad                 String?
  posicion_principal          String?
  posicion_secundaria         String?
  sexo                        String?
  dni                         String                @unique
  foto                        String?
  localidad                   String?
  telefono                    String?
  telefono_padre              String?
  telefono_madre              String?
  talla_camiseta              String?
  talla_chandal               String?
  talla_sudadera              String?
  numero_pie                  Int?
  mail_1                      String?
  mail_2                      String?
  notas                       String?
  nombre_padre                String?
  nombre_madre                String?
  goles                       Int?
  fecha_reconocimiento_medico DateTime?

  categoria                   Categoria             @relation(fields: [categoriaId], references: [id])
  entrenamientos JugadoresEntrenamiento[]
}

// Definición del modelo Entrenadores
model Entrenadores {
  id                  Int                 @id @default(autoincrement())
  nombre              String
  apellidos           String
  fecha_nacimiento    DateTime?
  dni                 String              @unique
  foto                String?
  localidad           String?
  telefono            String?
  talla_camiseta      String?
  talla_chandal       String?
  talla_sudadera      String?
  mail_1              String?
  mail_2              String?
  notas               String?
  titulacion          String?

  categoria           Categoria           @relation(fields: [dni], references: [temporada])
  entrenamientos Entrenamiento[]
}

// Definición del modelo Categoría
model Categoria {
  id                  Int                 @id @default(autoincrement())
  nombre              String
  temporada           String              @unique
  entrenador          Entrenadores?
  jugadores           Jugadores[]
}


model Entrenamiento {
  id                  Int                 @id @default(autoincrement())
  fecha               DateTime
  entrenadorId        Int

  entrenador          Entrenadores       @relation(fields: [entrenadorId], references: [id])
  jugadores   JugadoresEntrenamiento[]
}

//Faltas asistencia, tabla N:M que sale de la relación
model JugadoresEntrenamiento {
  entrenamientoId Int
  jugadoresId     Int
  asistencia      Boolean
  calendario      DateTime
  entrenamiento   Entrenamiento @relation(fields: [entrenamientoId], references: [id])
  jugadores       Jugadores     @relation(fields: [jugadoresId], references: [id])

  @@id([entrenamientoId, jugadoresId])
}

//adición de temporada y cambios de temporada

// model Temporada { //quizas sea esta solo la que necesito
//   id       Int      @id @default(autoincrement())
//   nombre   String
//   estado   String
//   categorias Categoria[]
// }

// model Categoría {
//   id           Int           @id @default(autoincrement())
//   nombre       String

//   temporada    Temporada     @relation(fields: [temporadaId], references: [id])
//   temporadaId  Int

//   entrenador   Entrenadores? @relation(fields: [entrenadorId], references: [id])
//   entrenadorId Int?

//   jugadores    Jugadores[]
// }

// model EntrenadoresPorTemporada {
//   id            Int          @id @default(autoincrement())

//   temporada     Temporada   @relation(fields: [temporadaId], references: [id])
//   temporadaId   Int

//   entrenador    Entrenadores @relation(fields: [entrenadorId], references: [id])
//   entrenadorId  Int
// }

// model JugadoresPorTemporada {
//   id          Int        @id @default(autoincrement())

//   temporada   Temporada @relation(fields: [temporadaId], references: [id])
//   temporadaId Int

//   jugador     Jugadores  @relation(fields: [jugadorId], references: [id])
//   jugadorId   Int
// }